{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filtter.module.css","redux/phonebook/phoneBook.actions.js","redux/phonebook/phoneBook.types.js","redux/phonebook/phoneBook.reducer.js.js","redux/rootReducer.js","redux/store.js","Components/filter/Filter.js","Components/contactForm/ContactForm.js","Components/contactList/ContactList.js","Components/App.js","index.js","Components/contactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","uuid","removeContact","filterContacts","ItemsReducer","createReducer","state","action","filter","item","filterReducer","_","phoneBookReducer","combineReducers","items","rootReducer","contacts","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","mapDispatchToProps","handleChange","evt","target","value","connect","className","styles","input","type","name","placeholder","onChange","ContactForm","number","event","setState","handleSubmit","preventDefault","console","log","props","find","alert","reset","formContainer","onSubmit","this","inputData","pattern","title","required","addBtn","Component","prototypes","PropTypes","func","isRequired","onDelete","normalizedFilter","toLowerCase","includes","contactsList","map","deleteBtn","onClick","App","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7b6b0674.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2T2Vn\",\"contact\":\"ContactList_contact__tjCeq\",\"deleteBtn\":\"ContactList_deleteBtn__6T0vf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filtter_input__XwVd_\"};","// *********** Redux Toolkit *********** //\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport {\r\n  ADD_CONTACT,\r\n  REMOVE_CONTACT,\r\n  FILTER_CONTACTS,\r\n} from \"./phoneBook.types\";\r\n\r\nconst addContact = createAction(ADD_CONTACT, (contact) => {\r\n  return {\r\n    payload: {\r\n      ...contact,\r\n      id: uuid(),\r\n    },\r\n  };\r\n});\r\nconst removeContact = createAction(REMOVE_CONTACT);\r\nconst filterContacts = createAction(FILTER_CONTACTS);\r\n\r\nexport { addContact, removeContact, filterContacts };\r\n\r\n// *********** React - Redux *********** //\r\n\r\n// import {\r\n//   ADD_CONTACT,\r\n//   REMOVE_CONTACT,\r\n//   FILTER_CONTACTS,\r\n// } from \"./phoneBook.types\";\r\n// import { v4 as uuid } from \"uuid\";\r\n\r\n// const addContact = (contact) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: {\r\n//     ...contact,\r\n//     id: uuid(),\r\n//   },\r\n// });\r\n\r\n// const removeContact = (payload) => ({\r\n//   type: REMOVE_CONTACT,\r\n//   payload: payload,\r\n// });\r\n\r\n// const filterContacts = (payload) => ({\r\n//   type: FILTER_CONTACTS,\r\n//   payload: payload.target.value,\r\n// });\r\n\r\n// export { addContact, removeContact, filterContacts };\r\n","const ADD_CONTACT = \"phonebook/addContact\";\r\nconst REMOVE_CONTACT = \"phonebook/removeContact\"\r\nconst FILTER_CONTACTS = \"phonebook/filterContacts\"\r\n\r\nexport {ADD_CONTACT, REMOVE_CONTACT, FILTER_CONTACTS}","// ***** Redux Toolkit***** //\r\nimport { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact, filterContacts } from \"./phoneBook.actions\";\r\n\r\nconst ItemsReducer = createReducer([], {\r\n  [addContact]: (state, action) => {\r\n    // console.log([...state]);\r\n    return [...state, action.payload];\r\n  },\r\n  [removeContact]: (state, action) => [\r\n    ...state.filter((item) => item.id !== action.payload),\r\n  ],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst phoneBookReducer = combineReducers({\r\n  items: ItemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default phoneBookReducer;\r\n\r\n// ***** React - Redux ***** //\r\n\r\n// import { combineReducers } from \"redux\";\r\n// import {\r\n//   ADD_CONTACT,\r\n//   FILTER_CONTACTS,\r\n//   REMOVE_CONTACT,\r\n// } from \"./phoneBook.types\";\r\n\r\n// const initialState = {\r\n//   items: [],\r\n//   filter: \"\",\r\n// };\r\n\r\n// const itemsReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         items: [...state.items, action.payload],\r\n//       };\r\n\r\n//     case REMOVE_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         items: [...state.items.filter((item) => item.id !== action.payload)],\r\n//       };\r\n\r\n//     case FILTER_CONTACTS:\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const phoneBookReducer = combineReducers({\r\n//   items: itemsReducer,\r\n// });\r\n\r\n// export default phoneBookReducer;\r\n","import { combineReducers } from \"redux\"\r\nimport phoneBookReducer from \"./phonebook/phoneBook.reducer.js.js\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: phoneBookReducer,\r\n})\r\n\r\nexport default rootReducer;","// *********** Redux Toolkit *********** //\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n// *********** Redux *********** //\r\n\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import rootReducer from \"./rootReducer\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from \"react\";\r\nimport styles from \"./Filtter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Find contact by name\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: (evt) => filterContacts(evt.target.value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"ok\");\r\n\r\n    // вынесла проверку из App (функция addContact). Взяла контакты из пропсов. РАБОТАЕТ!!!\r\n    const contactExist = this.props.contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    if (contactExist) {\r\n      alert(`Contact <-- ${this.state.name} --> already exists`);\r\n      return;\r\n    }\r\n    console.log(this.state);\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.formContainer}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input\r\n              className={styles.inputData}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name:\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              className={styles.inputData}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"Number:\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.addBtn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.prototypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = { addContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id} className={styles.contact}>\r\n          {contact.name}: {contact.number}\r\n          <button\r\n            className={styles.deleteBtn}\r\n            type=\"button\"\r\n            onClick={() => onDelete(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const items = state.contacts.items;\r\n  const filter = state.contacts.filter;\r\n  console.log(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filteredContacts = items.filter((item) =>\r\n    item.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: filteredContacts,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   filteredContacts: state.contacts.items.items,\r\n// })\r\n\r\nconst mapDispatchToProps = { onDelete: removeContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n// import { connect } from \"react-redux\";\r\n// import {\r\n//   addContact,\r\n//   removeContact,\r\n// } from \"../redux/phonebook/phoneBook.actions\";\r\n\r\nclass App extends Component {\r\n  // state = {\r\n  //   contacts: [\r\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  //   ],\r\n  //   filter: \"\",\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  //   const contacts = localStorage.getItem(\"contacts\");\r\n\r\n  //   if (contacts) {\r\n  //     const parsedContacts = JSON.parse(contacts);\r\n  //     this.setState({ contacts: parsedContacts });\r\n  //   }\r\n  // }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.contacts !== this.state.cntacts) {\r\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n\r\n  // addContact = (name, number) => {\r\n  //   const contactExist = this.state.contacts.find(\r\n  //     (contact) => contact.name === name\r\n  //   );\r\n\r\n  //   if (contactExist) {\r\n  //     alert(`${name} already exists`);\r\n  //     return;\r\n  //   }\r\n\r\n  //   // const newContact = {\r\n  //   //   id: uuidv4(),\r\n  //   //   name,\r\n  //   //   number,\r\n  //   //   filter: this.state.filter,\r\n  //   // };\r\n\r\n  //   // this.setState((prevState) => ({\r\n  //   //   contacts: [newContact, ...prevState.contacts],\r\n  //   //   filter: \"\",\r\n  //   // }));\r\n  //   this.props.addContact({ name, number });\r\n  // };\r\n\r\n  // handleChange = (event) => {\r\n  //   const { name, value } = event.target;\r\n  //   this.setState({ [name]: value });\r\n  // };\r\n\r\n  //****************\r\n\r\n  // filterContacts = () => {\r\n  //   const { contacts, filter } = this.state;\r\n  //   const normalizedFilter = filter.toLowerCase();\r\n\r\n  //   return contacts.filter((contact) =>\r\n  //     contact.name.toLowerCase().includes(normalizedFilter)\r\n  //   );\r\n  // };\r\n\r\n  //****************\r\n\r\n  // deleteContact = (id) => {\r\n  //   this.setState((prevState) => ({\r\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n  //   }));\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2 className=\"title\">Phonebook:</h2>\r\n        {/* <ContactForm addContact={this.props.addContact} /> */}\r\n        <ContactForm />\r\n\r\n        <h2 className=\"title\">Contacts:</h2>\r\n\r\n        <Filter />\r\n\r\n        <ContactList\r\n        // filteredContacts={this.props.contacts}\r\n        // onDelete={this.props.removeContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const items = state.contacts.items.items;\r\n//   const filter = state.contacts.items.filter;\r\n\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   const filteredContacts = items.filter((item) =>\r\n//     item.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n\r\n//   return {\r\n//     contacts: filteredContacts,\r\n//     filter: state.contacts.items.filter,\r\n//   };\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     items: state.contacts.items.items,\r\n//     filter: state.contacts.items.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   addContact,\r\n//   onDelete: removeContact,\r\n// };\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./Components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ContactForm_formContainer__1aYJH\",\"inputData\":\"ContactForm_inputData__12i3a\",\"addBtn\":\"ContactForm_addBtn__34G8b\"};"],"sourceRoot":""}